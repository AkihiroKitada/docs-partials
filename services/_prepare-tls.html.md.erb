This topic provides an overview of how to prepare for using Transport Layer Security (TLS)
with <%= vars.product_full %> to secure communication between apps and service instances.<br>

This topic explains how to provide an existing CA certificate to BOSH CredHub and
generate a new CA certificate with BOSH CredHub.

If you are using <%= vars.ops_manager %> v2.6 or later and you want to use the certificate
provided by <%= vars.ops_manager %>, then you can skip this page.

<p class="note warning"><strong>Warning:</strong> This procedure involves restarting
	all of the VMs in your <%= vars.platform_name %> deployment to apply a CA certificate. The
	operation can take a long time to complete.
</p>

<p class="note"><strong>Note: </strong>
  This certificate is shared by multiple tiles.
  If you have already performed this procedure, you do not need to repeat it.
  To change this certificate, follow the steps in
  <a href="https://docs.pivotal.io/pivotalcf/security/pcf-infrastructure/api-cert-rotation.html">Rotating Certificates</a>.
</p>

##<a id='overview'></a> Overview

<% if vars.service_name == "Redis for Pivotal Platform" %>
Enabling TLS co-locates a second TLS-enabled port on <%= vars.product_short %> service instances.
Apps and clients can use this port to establish encrypted connections with the service.
<% else %>
Enabling TLS provisions a <%= vars.product_short %> server with a certificate.
This certificate enables apps and clients to establish an encrypted connection with the service.
<% end %>
The certificate used in this connection is a server certificate generated by CredHub.

CredHub is a component designed for centralized credential management in <%= vars.platform_name %>
and is co-located on the BOSH Director.
CredHub generates the server certificate with a Certificate Authority (CA) certificate.
The operator can provide this CA certificate to CredHub or have CredHub generate a new CA certificate.

Apps and clients that communicate with the <%= vars.product_short %> server must have access
to the public component of the CA certificate to validate that the server certificate
is trustworthy.

<% if vars.service_name == "Redis for Pivotal Platform" %>

  <%= vars.platform_name %> distributes the public component of the CA certificate by provisioning a copy
  of the CA certificate in the trusted store of each container's operating system.
  Apps written in Java and Spring, or C# and Steeltoe, automatically discover the
  CA certificate in the trusted store.

<% else %>
  <%= vars.platform_name %> distributes the public component of the CA certificate the following
  ways:

  * <%= vars.platform_name %> provisions a copy of the CA certificate in the trusted store of each
  container's operating system.
    Apps written in Java and Spring automatically discover the CA certificate in
  	the trusted store.
  * <%= vars.platform_name %> supplies the public CA certificate in an environment variable called
  `VCAP_SERVICES` that exists in every container.
    Apps not written in Java and Spring can retrieve the public component of the
  	CA certificate from `VCAP_SERVICES`
    and use it to establish an encrypted connection with the data service.
<% end %>

##<a id='workflow'></a> Workflow

The following workflow describes enabling TLS for <%= vars.product_full %>:

1. An operator provides a CA certificate to CredHub by performing the procedures
	in <a href="#provide-generate-pcf">Provide or Generate a CA Certificate</a> below.
1. An operator enables TLS in the tile configuration while installing <%= vars.product_short %>.
			See
			<% if vars.service_name == "Redis for Pivotal Platform" %>
					[Configure On-Demand Service Settings](./installing.html#on-demand-config).
			<% else %>
					[Configure Security](./install-config.html#security).
			<% end %>
<% case vars.service_name
when "Redis for Pivotal Platform" %>
1. An app developer modifies their app to communicate securely with the <%= vars.product_short %> server.
See [Using TLS](./appdevs.html#using-tls).
<% when "MySQL for Pivotal Platform" %>
1. A developer enables TLS for an existing service instance.
    See [Using TLS](./using-tls.html).
1. A developer modifies their app to communicate securely with the <%= vars.product_short %> server:
	+ **For Java and Spring apps,** see [Activate TLS for Java and Spring Apps](./using-tls.html#activate-spring).
	+ **For all other apps,** see [Activate TLS for Non-Spring Apps](./using-tls.html#activate-non-spring).
<% when "RabbitMQ for Pivotal Platform" %>
1. A developer enables TLS for an existing service instance.
		See [Enable TLS for Your Service Instance](./use.html#tls)
1. A developer modifies their app to communicate securely with the <%= vars.product_short %> server:
	+ **For Java or Spring apps,** see [Activate TLS for Java and Spring Apps](./use.html#tls-java-spring).
  + **For all other apps,** see [Modifying Apps for TLS](./modify-apps-tls.html")
<% end %>

<p class="note"><strong>Note</strong>: An operator must also rotate the CA
	certificate if it expires or if it becomes compromised.
For information about how to rotate your CA certificate, see
<a href="rotating-ca.html">Rotating CA Certificates</a>.
</p>
