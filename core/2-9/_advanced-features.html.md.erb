The **Advanced Features** pane includes new functionality that may have certain constraints. Although these features are fully supported, Pivotal recommends caution when using them in production environments.

### <a id="disk-memory-overcommit"></a> Diego Cell Memory and Disk Overcommit

If your apps do not use the full allocation of disk space and memory set in the **Resource Config** tab, you might want use this feature. These fields control the amount to overcommit disk and memory resources to each Diego Cell VM.

For example, you might want to use the overcommit if your apps use a small amount of disk and memory capacity compared to the amounts set in the **Resource Config** settings for **Diego Cell**.

<p class="note"><strong>Note:</strong> Due to the risk of app failure and the deployment-specific nature of disk and memory use, Pivotal has no recommendation for how much, if any, memory or disk space to overcommit.</p>

To enable overcommit:

1. Select **Advanced Features**.

1. Enter in MB the total desired amount of Diego cell memory in the **Cell memory capacity** field. Refer to the **Diego Cell** row in the **Resource Config** tab for the current Diego Cell memory capacity settings that this field overrides.

1. Enter in MB the total desired amount of Diego cell disk capacity in the **Cell disk capacity** field. Refer to the **Diego Cell** row in the **Resource Config** tab for the current Diego Cell disk capacity settings that this field overrides.

1. Click **Save**.

<p class="note"><strong>Note:</strong> Entries made to each of these two fields set the total amount of resources allocated, not the overage.</p>

### <a id="app-graceful-shutdown-period"></a> App Graceful Shutdown Period

When app instances are shut down during platform updates or app stop/restart/scale-down events, the platform sends a SIGTERM to the processes in the application container. Processes have a graceful shutdown period between the initial signal and the SIGKILL that is initiated to forcefully shutdown the application. This graceful shutdown period can be configured to greater than the default of 10 seconds if applications running on the platform require a longer amount of time to finish their in flight work and shut down safely.

<p class="note"><strong>Note:</strong> Increasing this value significantly may result in slower platform upgrades as each cell will respect this configuration when it is cleaning up evacuated application instances and wait for each to gracefully shut down. It may be advisable to use isolation segments in order to separate classes of applications that have different shut down characteristics in order to ensure cell update times are reliable.</p>

To modify this setting:

1. Select **Advanced Features**.

1. Enter in seconds in the **App Graceful Shutdown Period** field the desired amount of time the platform should wait for an app instance to exit once it has been signalled to gracefully shut down. The default and minimum allowed value is 10 seconds.

1. Click **Save**.

<p class="note"><strong>Note:</strong> It is important to ensure this property is consistent across all environments an application is deployed to in order to avoid unexpected behavior.</p>

<% if current_page.data.deployment != "IST" %>

### <a id="rfc_allowlist"></a> Non-RFC-1918 Private Network Allow List

Some private networks require extra configuration so that internal file storage (WebDAV) can communicate with other <%= vars.product_full %> processes. 

The **Non-RFC-1918 private network allow list** field is provided for deployments that use a non-RFC 1918 private network. This is typically a private network other than `10.0.0.0/8`, `172.16.0.0/12`, or `192.168.0.0/16`. 

Most <%= vars.product_name %> deployments do not require any modifications to this field.

To add your private network to the allow list:

1. Select **Advanced Features**.

1. Append a new `allow` rule to the existing contents of the **Non-RFC-1918 private network allow list** field. 
  Include the word `allow`, the network CIDR range to allow, and a semi-colon (`;`) at the end. For example:
  ```
  allow 172.99.0.0/24;
  ```
   
1. Click **Save**.

### <a id="cf_cli_timeout"></a> CF CLI Connection Timeout

The **CF CLI connection timeout** field allows you to override the default five-second timeout of the Cloud Foundry Command Line Interface (cf CLI) used within your <%= vars.product_name %> deployment. This timeout affects the cf CLI command used to push PAS errand apps such as Notifications, Autoscaler, and Apps Manager.

Set the value of this field to a higher value, in seconds, if you are experiencing domain name resolution timeouts when pushing errands in PAS.

To modify the value of the CF CLI connection timeout:

1. Select **Advanced Features**.

1. Enter a value, in seconds, to the **CF CLI connection timeout** field. 

1. Click **Save**.

<% end %>

<% if current_page.data.deployment != "IST" %>

### <a id='tls'></a> Enable TLS for Internal System Database

You can optionally enable TLS for clients of the internal system database. This feature is in beta, and the checkbox is disabled by default. For more information about the internal system database, see [Managing Internal Databases](../opsguide/internal-databases.html).

To enable TLS for clients of the internal system database:

1. Select **Advanced Features**.

1. Select the **Enable TLS for internal system database (beta)** checkbox.

1. Click **Save**.

### <a id="db-connection-limits"></a> Database Connection Limits

You can configure the maximum number of concurrent database connections that Diego and container networking components can have.

To configure the maximum number of concurrent database connections:

1. Select **Advanced Features**.

1. Enter a value in each field beginning with **Maximum number of open connections...** for a given component. The placeholder values for each field are the default values.

1. Click **Save**.

When there are not enough connections available, such as during a time of heavy load, components may experience degraded performance and sometimes failure. To resolve or prevent this, you can increase and fine-tune database connection limits for the component.   

When there are not enough connections available, such as during a time of heavy load, components may experience degraded performance and sometimes failure. To resolve or prevent this, you can increase and fine-tune database connection limits for the component.  

<p class="note warning"><strong>Warning:</strong> Decreasing the value of this field for a component may affect the amount of time it takes for it to respond to requests.</p>

### <a id="zdt-app-deployments"></a> Rolling App Deployments

You can optionally disable rolling app deployments. For more information, see [Rolling App Deployments](../devguide/deploy-apps/rolling-deploy.html).

To disable rolling app deployments:

1. Select **Advanced Features**.

1. Select the **Disable rolling app deployments** checkbox.

1. Click **Save**.

### <a id='log-cache-max-per-source'></a> Maximum Number of Envelopes Stored in Log Cache Per Source

By default, Log Cache keeps 100,000 envelopes per source. An envelope wraps an event and adds metadata. For sources that produce more than 100,000 envelopes, this default may not provide a long enough duration for you to specify a time period for a historical query.

To set the maximum number of envelopes stored per source above the default:

1. Select **Advanced Features**.

1. Enter the **Maximum number of envelopes stored in Log Cache per source**.

1. Click **Save**.


### <a id='usage-service-data-retention'></a> Usage Service Data Retention Period

By default, Usage Service deletes granular data after 365 days. 

You can configure this retention period using the **Usage service cutoff age in days** field. To avoid performance or data migration issues, Pivotal recommends that you do not retain data for longer than 365 days. 

For more information, see [Usage Data Retention](./accounting-report.html#usage-retention).


<% end %>
